Although before the purchase of the CPU (AMD), I checked for the AMD-v capability for the Virtualization
capability, I went ahead and checked on the command line:

grep -e 'sv' /proc/cpuinfo

You can also verify that the KVM modules are loaded in the kernel:

lsmod | grep kvm

Go ahead and updating the system:

yum update

Make sure SELinux is in Permissive mode

setenforce 0

When checking /etc/selinux/config or /etc/sysconfig/selinux, the output showed that the CURRENT
mode is "permissive" but the mode from config was still "enforcing"


Continuing with the installation/setting up of the KVM:

to install the user-level KVM and disk image manager:

yum install qemu-kvm qemu-img


to download more useful tools for administration purposes:

-virt-manager: provides a GUI tool to administrate your virtual machines
-libvirt-client: provides a CL tool to administrate your virtual environment called "virsh"
-virt-install: provides the command "virt-install" to create your virtual machines from CLI
-libvirt: provides the server and host side libraries for interacting with hypervisors and 
host systems


yum install virt-manager libvirt libvirt-python libvirt-client

*getting the error:
No match for argument: libvirt-python
Error: Unable to find a match: libvirt-python

**libvirt-python package provides a module that permits applications written in the Python 3.x programming
language to call the interface supplied by the libvirt library, to manage the virtualization
capabilities of recent versions of Linux and other OSes

*it may have changed from Centos7 to Centos8 so doing a manual search:

yum search libvirt 

I see python3-libvirt as the package name

yum install python3-libvirt
*getting an error message that it's already been installed



Installing Virtualization Client, Virtualization Platform, and Virtualization Tools:

Virtualization Client
-clients for installing and managing virtualization instances
-mandatory packages:
1. python-virtinist
2. virt-manager
3. virt-viewer
-optional packages:
1. virt-top

Virtualization Platform
-provides an interface for accessing and controlling virtual machines and containers
-mandatory packages:
1. libvirt
2. libvirt-client
3. virt-who
4. virt-what
-optional packages:
1. fence-virtd-libvirt
2. fence-virtd-multicast
3. fence-virtd-serial
4. libvirt-cim
5. libvirt-java
6. libvirt-qmf
7. libvirt-snmp
8. perl-Sys-Virt

Virtualization Tools 
-tools for offline virtual image management
-mandatory packages:
1. libguestfs
-optional packages:
1. libguestfs-java
2. libguestfs-tools
3. virt-v2v

yum groupinstall virtualization-client virtualization-platform virtualization-tools


"libvirtd" is the virtualization daemon which manages all of the platform. This needs to be restarted:

systemctl restart libvirtd

systemctl status libvirtd

**daemon- a long-running background process that answers requests for services


**Yum is a package manager. RPM is a package container that includes information on what dependencies are needed by the package and build instructions.
***********************************************************

Now we need to install the SpaceWalk server on the KVM

dnf copr enable -y @spacewalkproject/nightly
dnf install -y spacewalk-repo
dnf copr remove @spacewalkproject/nightly

When trying to install the postgresql database for the Spacewalk:

yum -y install spacewalk-setup-postgresql
Errors during downloading metadata for repository 'spacewalk':
 - Status code: 404 for https://copr-be.cloud.fedoraproject.org/results/@spacewalkproject/spacewalk-2.11/epel-8-x86_64/repodata/repomd.xml
 Error: Failed to download metadata for repo 'spacewalk': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirros were tried
 
 **By default, yum deletes downloaded data files when they are no longer needed after a successful operation. This minimizes the amount of storage space that yum uses. However, 
 you can enable caching, so that the package files downloaded by yum stay in cache directories. By using cached data, you can carry out certain operations without a 
 network connection, you can also copy packages stored in the caches and reuse them elsewhere.

yum clean all

*tried it again

same error

modifying the value of "enabled" in /etc/yum.repos.d/spacewalk.repo to 0 from 1

now the error message is:

Error: Unable to find a match: spacewalk-setup-postgresql

*Resorting to setting it up manually 

yum install -y 'postgresql-server > 8.4'

*still failed because I had reverted the value of "enabled" for /etc/yum.repos.d/spacewalk.repo back to 1. Once I changed it BACK to 0, I was able to successfully install
postgresql on the server





**yum-plugin-tmprepo
This extension adds the --tmprepo option taking an url of a .repo file, downloads it and enable it for only one transaction. This extension tries to 
ensure the safe temporary usage of repositories, by default, it does not allow to disable the gpg check.
This extension adds the following options:
--tmprepo=[url]
Enables or creates one or more temporary repository from URLs of the corresponding .repo, repomd.xml, local repomd.xml file or repository local directory.
--tmprepo-keep-created
Keeps the repository configured.

**DNF or Dandified YUM[2][3][4] is the next-generation version of the Yellowdog Updater, Modified (yum), a package manager for .rpm-based distributions. 
DNF was introduced in Fedora 18 in 2013,[5] it has been the default package manager since Fedora 22 in 2015[6] and Red Hat Enterprise Linux 8.[7]













